version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: goforward-postgres
    environment:
      POSTGRES_DB: goforward
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - goforward-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and real-time features
  redis:
    image: redis:7-alpine
    container_name: goforward-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - goforward-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Go Forward Application
  goforward:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: goforward-app
    environment:
      # Database configuration
      GOFORWARD_DATABASE_HOST: postgres
      GOFORWARD_DATABASE_PORT: 5432
      GOFORWARD_DATABASE_NAME: goforward
      GOFORWARD_DATABASE_USER: postgres
      GOFORWARD_DATABASE_PASSWORD: postgres
      GOFORWARD_DATABASE_SSL_MODE: disable
      
      # Redis configuration
      GOFORWARD_REALTIME_REDIS_HOST: redis
      GOFORWARD_REALTIME_REDIS_PORT: 6379
      
      # Server configuration
      GOFORWARD_SERVER_HOST: 0.0.0.0
      GOFORWARD_SERVER_PORT: 8080
      
      # Auth configuration
      GOFORWARD_AUTH_JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      
      # Logging configuration
      GOFORWARD_LOGGING_LEVEL: info
      GOFORWARD_LOGGING_FORMAT: json
    ports:
      - "8080:8080"
    volumes:
      - ./storage:/app/storage
      - ./logs:/app/logs
      - ./plugins:/app/plugins
      - ./config.yaml:/app/config.yaml:ro
    networks:
      - goforward-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: goforward-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - goforward-network
    depends_on:
      - goforward
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  goforward-network:
    driver: bridge